@using NMP.Portal.Resources;
@model NMP.Portal.ViewModels.FieldViewModel

@{
    //ViewData["Title"] = string.Format(Resource.lblFieldMeasurements, Model.Name);
    string title = (Model != null && !string.IsNullOrEmpty(Model.EncryptedIsUpdate)) ? Resource.lblUpdateField : Resource.lblAddField;
    ViewData["Title"] = $"{string.Format(Resource.lblFieldMeasurements, Model.Name)} {Resource.lblHyphen} {title}";
    var backAction = "";
    if (Model.IsCheckAnswer)
    {
        backAction = "CheckAnswer";
    }
    else if (!string.IsNullOrWhiteSpace(Model.EncryptedIsUpdate))
    {
        backAction = "UpdateField";
    }
    else
    {
        backAction = "AddField";
    }
}
@section BeforeContent {
    <govuk-back-link asp-action=@backAction asp-controller="Field" asp-route-q="@Model.EncryptedFarmId">@Resource.lblBack</govuk-back-link>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form asp-action="FieldMeasurements" method="post" asp-controller="Field" autocomplete="off">
            @Html.AntiForgeryToken()
            <div hidden="true">
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Name"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.NationalGridReference"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.LPIDNumber"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.FarmID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsWithinNVZ"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedFarmId"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsAbove300SeaLevel"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilTypeID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilReleasingClay"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsSoilReleasingClay" value="@Model.IsSoilReleasingClay.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.SulphurDeficient"/>
                <govuk-date-input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.Date"></govuk-date-input>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.PH"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsSoilNutrientValueTypeIndex" value="@Model.IsSoilNutrientValueTypeIndex.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.MagnesiumIndex"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.PhosphorusIndex"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PotassiumIndexValue"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.PhosphorusMethodologyID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.Magnesium"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.Phosphorus"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilAnalyses.Potassium"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.isEnglishRules" value="@Model.isEnglishRules.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsCheckAnswer" value="@Model.IsCheckAnswer.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropTypeID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropGroupId"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.OtherReference"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.FarmName"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilType"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropGroup"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropType"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsAbove300SeaLevelForFarm" value="@Model.IsAbove300SeaLevelForFarm.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsWithinNVZForFarm" value="@Model.IsWithinNVZForFarm.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.LastHarvestYear"/>
                <govuk-date-input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SampleForSoilMineralNitrogen" value="@Model.SampleForSoilMineralNitrogen"></govuk-date-input>

                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.RecentSoilAnalysisQuestion" value="@Model.RecentSoilAnalysisQuestion.ToString().ToLower()"/>

                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SoilOverChalk" value="@Model.SoilOverChalk.ToString().ToLower()"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedIsUpdate"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedFieldId"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.ID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedHarvestYear"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.HarvestYear"/>
                @if (Model != null)
                {
                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCroppings.HasGrassInLastThreeYear"/>
                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCroppings.HarvestYear"/>
                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCroppings.GrassManagementOptionID"/>

                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCroppings.HasGreaterThan30PercentClover"/>
                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCroppings.SoilNitrogenSupplyItemID"/>
                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCroppings.LayDuration"/>
                    @if (Model.PreviousGrassYears != null && Model.PreviousGrassYears.Count > 0)
                    {
                        @for (int i = 0; i < Model.PreviousGrassYears.Count; i++)
                        {
                            <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousGrassYears[i]" value="@Model.PreviousGrassYears[i]"/>
                        }
                    }
                    <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsPreviousYearGrass" value="@Model.IsPreviousYearGrass.ToString().ToLower()"/>
                }
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CopyExistingField" value="@Model.CopyExistingField.ToString().ToLower()"/>
            </div>
            <govuk-fieldset>
                <govuk-fieldset-legend class="govuk-fieldset__legend--l">
                    <h1 class="govuk-fieldset__heading">@string.Format(Resource.lblFieldMeasurements, Model.Name)</h1>
                </govuk-fieldset-legend>
                <govuk-input name="TotalArea" asp-for=@Model.TotalArea type="number" inputmode="decimal"
                             pattern="^\d+(\.\d{0,2})?$" step="any" input-class="govuk-input--width-5" spellcheck="false">
                    <govuk-input-label>@Resource.lblTotalFieldArea
                        <span class="govuk-visually-hidden"> @string.Format(Resource.lblInUnit, Resource.lblHectares)</span>
                    </govuk-input-label>

                    <govuk-input-suffix>@Resource.lblHectares</govuk-input-suffix>
                </govuk-input>
                <govuk-input name="CroppedArea" asp-for=@Model.CroppedArea type="number" step="any" input-class="govuk-input--width-5" spellcheck="false">
                    <govuk-input-label>
                        @Resource.lblCroppedAreaForCheckAnswere
                        <span class="govuk-visually-hidden"> @string.Format(Resource.lblInUnit, Resource.lblHectares)</span>
                        @Resource.lblOptional
                    </govuk-input-label>

                    <govuk-input-suffix>@Resource.lblHectares</govuk-input-suffix>
                </govuk-input>
                <govuk-input name="ManureNonSpreadingArea" asp-for=@Model.ManureNonSpreadingArea type="number" step="any" input-class="govuk-input--width-5" spellcheck="false">
                    <govuk-input-label>
                        @Resource.lblManureNonSpreadingAreaForCheckAnswere
                        <span class="govuk-visually-hidden"> @string.Format(Resource.lblInUnit, Resource.lblHectares)</span> 
                        @Resource.lblOptional
                    </govuk-input-label>

                    <govuk-input-suffix>@Resource.lblHectares</govuk-input-suffix>
                </govuk-input>
            </govuk-fieldset>
            <govuk-button type="submit" data-prevent-double-click="true" class="govuk-button margin-bottom-forty margin-bottom-forty">
                @Resource.lblContinue
            </govuk-button>
        </form>
        <p class="govuk-body cancel-link">

            @if (!string.IsNullOrWhiteSpace(Model.EncryptedFieldId))
            {
                <a asp-action="UpdateField" asp-controller="Field">@Resource.lblCancel</a>
            }
            else if (!Model.IsCheckAnswer)
            {
                <a asp-action="CreateFieldCancel" asp-controller="Field" asp-route-id="@Model.EncryptedFarmId">@Resource.lblCancel</a>
            }
            else if (Model.IsCheckAnswer)
            {
                <a asp-action="CheckAnswer" asp-controller="Field">@Resource.lblCancel</a>
            }
        </p>
    </div>
</div>
