@using NMP.Portal.Resources
@model NMP.Portal.ViewModels.PlanViewModel
@{
    var EnterDifferentFiguresForEachField = (int)NMP.Portal.Enums.YieldQuestion.EnterDifferentFiguresForEachField;
    var EnterASingleFigureForAllTheseFields = (int)NMP.Portal.Enums.YieldQuestion.EnterASingleFigureForAllTheseFields;
    var UseTheStandardFigureForAllTheseFields = (int)NMP.Portal.Enums.YieldQuestion.UseTheStandardFigureForAllTheseFields;
    var NoDoNotEnterAYield = (int)NMP.Portal.Enums.YieldQuestion.NoDoNotEnterAYield;
    var bachAction = (Model.SowingDateQuestion == (int)NMP.Portal.Enums.SowingDateQuestion.NoIWillEnterTheDateLater) ? "SowingDateQuestion" :
     "SowingDate";
    int OtherGroupId = (int)NMP.Portal.Enums.CropGroup.Other;

    var pageHeading = "";
    if (ViewBag.DefaultYield != null && ViewBag.DefaultYield > 0)
    {
        pageHeading = (string.Format(Model.Crops.Count > 1 ? Resource.lblHowDoYouWantToEnterTheExpectedYieldForInTheseFields : Resource.lblYieldQuestionForSingleField, Model.CropGroupId == OtherGroupId ? Model.OtherCropName : Model.CropGroupId == (int)NMP.Portal.Enums.CropGroup.Potatoes ? Model.Variety : Model.CropType));
    }
    else
    {
        if (Model.Crops.Count > 1)
        {
            pageHeading = string.Format(Resource.lblDoYouWantToEnterTheExpectedYieldInTheseFields, Model.CropGroupId == OtherGroupId ? Model.OtherCropName : Model.CropGroupId == (int)NMP.Portal.Enums.CropGroup.Potatoes ? Model.Variety : Model.CropType);
        }
        else
        {
            pageHeading = string.Format(Resource.lblDoYouWantToEnterTheExpectedYieldInFieldName, (Model.CropGroupId == OtherGroupId ? Model.OtherCropName : Model.CropGroupId == (int)NMP.Portal.Enums.CropGroup.Potatoes ? Model.Variety : Model.CropType), Model.FieldName);
        }
    }
    string title = (!string.IsNullOrEmpty(Model.EncryptedIsCropUpdate)) ? Resource.lblUpdatePlan : Resource.lblCreatePlan;
    ViewData["Title"] = $"{pageHeading} {Resource.lblHyphen} {title}";
}

@section BeforeContent {
    <govuk-back-link asp-action=@(Model.IsCheckAnswer && (!Model.IsAnyChangeInField) && (!Model.IsCropGroupChange) && (!Model.IsCropTypeChange) ? "CheckAnswer" : bachAction) asp-controller="Crop" asp-route-q="@Model.SowingDateEncryptedCounter">@Resource.lblBack</govuk-back-link>
}
<form asp-action="YieldQuestion" asp-controller="Crop" method="post" autocomplete="off">
    @Html.AntiForgeryToken()
    @if (TempData["YieldQuestionError"] != null)
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <govuk-error-summary>
                    <govuk-error-summary-item href="#">@TempData["YieldQuestionError"]</govuk-error-summary-item>
                </govuk-error-summary>
            </div>
        </div>
    }
    <div hidden="true">
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Year"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropGroupId"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropTypeID"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropGroup"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropType"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsEnglishRules"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedFarmId"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Variety"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.OtherCropName"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.FieldName"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.FieldID"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SowingDateCurrentCounter"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SowingDateEncryptedCounter" value="@Model.SowingDateEncryptedCounter"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SowingDateQuestion" value="@Model.SowingDateQuestion"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropInfo1"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropInfo2"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsCheckAnswer"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropInfo1Name"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropInfo2Name"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsAnyChangeInField" value="@Model.IsAnyChangeInField"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsQuestionChange" value="@Model.IsQuestionChange"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsCropGroupChange" value="@Model.IsCropGroupChange"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsAddAnotherCrop" value="@Model.IsAddAnotherCrop"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsPlanRecord" value="@Model.IsPlanRecord"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CropGroupName"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsCropTypeChange" value="@Model.IsCropTypeChange"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CurrentSward"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.GrassSeason"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.GrassGrowthClassDistinctCount" value="@Model.GrassGrowthClassDistinctCount"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.GrassGrowthClassCounter" value="@Model.GrassGrowthClassCounter"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.GrassGrowthClassEncryptedCounter" value="@Model.GrassGrowthClassEncryptedCounter"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.GrassGrowthClassQuestion"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.DryMatterYieldCounter"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.DryMatterYieldEncryptedCounter"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SwardTypeId"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.SwardManagementId"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PotentialCut"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.DefoliationSequenceId"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedIsCropUpdate"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.PreviousCropGroupName"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.IsComingFromRecommendation" value="@Model.IsComingFromRecommendation.ToString().ToLower()"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedFieldId"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedCropType"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.EncryptedCropOrder"/>
        <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.CopyExistingPlan"/>

        @if (Model.HarvestYear != null && Model.HarvestYear.Count > 0)
        {
            @for (int i = 0; i < Model.HarvestYear.Count; i++)
            {
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.HarvestYear[i].Year" value="@Model.HarvestYear[i].Year"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.HarvestYear[i].EncryptedYear" value="@Model.HarvestYear[i].EncryptedYear"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.HarvestYear[i].LastModifiedOn" value="@Model.HarvestYear[i].LastModifiedOn"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.HarvestYear[i].IsAnyPlan" value="@Model.HarvestYear[i].IsAnyPlan"/>
            }
        }
        @if (Model.FieldList != null && Model.FieldList.Count > 0)
        {
            @for (int i = 0; i < Model.FieldList.Count; i++)
            {
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.FieldList[i]" value="@Model.FieldList[i]"/>
            }
        }
        @if (Model.Crops != null && Model.Crops.Count > 0)
        {
            @for (int i = 0; i < Model.Crops.Count; i++)
            {
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].ID" value="@Model.Crops[i].ID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].FieldID" value="@Model.Crops[i].FieldID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].Year" value="@Model.Crops[i].Year"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].CropTypeID" value="@Model.Crops[i].CropTypeID"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].OtherCropName" value="@Model.Crops[i].OtherCropName"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].Variety" value="@Model.Crops[i].Variety"/>
                <govuk-date-input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].SowingDate" value="@Model.Crops[i].SowingDate"></govuk-date-input>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].Yield" value="@Model.Crops[i].Yield"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].CropInfo1" value="@Model.Crops[i].CropInfo1"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].CropInfo2" value="@Model.Crops[i].CropInfo2"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].FieldName" value="@Model.Crops[i].FieldName"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].EncryptedCounter" value="@Model.Crops[i].EncryptedCounter"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].CropOrder" value="@Model.Crops[i].CropOrder"/>
                <input class="govuk-visually-hidden" type="hidden" asp-for="@Model.Crops[i].CropGroupName" value="@Model.Crops[i].CropGroupName"/>
            }

        }
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <govuk-radios asp-for="@Model.YieldQuestion">
                <govuk-radios-fieldset>
                    <govuk-radios-hint>@Resource.lblYouCanEnterAYieldLater</govuk-radios-hint>
                    <govuk-radios-fieldset-legend is-page-heading="true" class="govuk-fieldset__legend--l">
                        @if (ViewBag.DefaultYield != null && ViewBag.DefaultYield > 0)
                        {
                            @(string.Format(Model.Crops.Count > 1 ? Resource.lblHowDoYouWantToEnterTheExpectedYieldForInTheseFields : Resource.lblYieldQuestionForSingleField, Model.CropGroupId == OtherGroupId ? Model.OtherCropName : Model.CropType))
                        }
                        else
                        {
                            @if (Model.Crops.Count > 1)
                            {
                                @string.Format(Resource.lblDoYouWantToEnterTheExpectedYieldInTheseFields, Model.CropGroupId == OtherGroupId ? Model.OtherCropName : Model.CropType)
                            }
                            else
                            {
                                @string.Format(Resource.lblDoYouWantToEnterTheExpectedYieldInFieldName, (Model.CropGroupId == OtherGroupId ? Model.OtherCropName :  Model.CropType), Model.FieldName)
                            }
                        }
                        @* : Resource.lblDoYouWantToEnterTheExpectedYieldInFieldName *@
                    </govuk-radios-fieldset-legend>
                    @* <govuk-radios-item value="@EnterASingleFigureForAllTheseFields">@(Model.Crops.Count > 1 ? Resource.lblEnterASingleFigureForAllTheseFields : Resource.lblEnterAFigure)</govuk-radios-item> *@
                    @if (ViewBag.DefaultYield != null && ViewBag.DefaultYield > 0)
                    {
                        <govuk-radios-item value="@EnterASingleFigureForAllTheseFields">@(Model.Crops.Count > 1 ? Resource.lblEnterASingleFigureForAllTheseFields : Resource.lblEnterAFigure)</govuk-radios-item>
                        @if (Model.Crops.Count > 1)
                        {
                            <govuk-radios-item value="@EnterDifferentFiguresForEachField">@Resource.lblEnterDifferentFiguresForEachField</govuk-radios-item>
                        }
                        <govuk-radios-item value="@UseTheStandardFigureForAllTheseFields">@(Model.Crops.Count > 1 ? string.Format(Resource.lblUseTheStandardFigure, ViewBag.DefaultYield) : string.Format(Resource.lblUseTheStandardFigureForThisField, ViewBag.DefaultYield))</govuk-radios-item>
                    }
                    else
                    {
                        <govuk-radios-item value="@EnterASingleFigureForAllTheseFields">@(Model.Crops.Count > 1 ? Resource.lblEnterASingleFigureForAllTheseFields : Resource.lblYes)</govuk-radios-item>
                        @if (Model.Crops.Count > 1)
                        {
                            <govuk-radios-item value="@EnterDifferentFiguresForEachField">@Resource.lblEnterDifferentFiguresForEachField</govuk-radios-item>
                        }
                        <govuk-radios-item value="@NoDoNotEnterAYield">@(Model.Crops.Count > 1 ?Resource.lblNoDoNotEnterAYield:Resource.lblNo)</govuk-radios-item>
                    }
                </govuk-radios-fieldset>
            </govuk-radios>
            <govuk-button type="submit" class="margin-bottom-forty">
                @Resource.lblContinue
            </govuk-button>
            <p class="govuk-body cancel-link">
                @if (!Model.IsCheckAnswer)
                {
                    <a asp-action="CreateCropPlanCancel" asp-controller="Crop" asp-route-q="@Model.EncryptedFarmId">@Resource.lblCancel</a>
                }
                else
                {
                    <a asp-action="CheckAnswer" asp-controller="Crop">@Resource.lblCancel</a>
                }
            </p>

        </div>

    </div>
</form>